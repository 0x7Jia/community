server:
  servlet:
    context-path: /community
  address: 0.0.0.0

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3376/community?serverTimezone=Asia/Shanghai
    username: root
    password: root
  thymeleaf:
    prefix: classpath:/templates/
    cache: false
  devtools:
    livereload:
      enabled: true
  mail:
    host: smtp.126.com
    port: 465
    username: your@email.com
    password: yourpassword
    protocol: smtps
    properties: {"mail.smtp.ssl.enable", true}
  redis:
    database: 11
    host: 192.168.3.19
    port: 6379
  kafka:
    bootstrap-servers: 192.168.3.19:9092
    consumer:
      group-id: community-consumer-group
      enable-auto-commit: true
      auto-commit-interval: 3000
  data:
    elasticsearch:
      cluster-name: docker-cluster
      cluster-nodes: 192.168.3.19:9300
  quartz:
    job-store-type: jdbc
    scheduler-name: CommunityScheduler
    properties:
      org:
        quartz:
          scheduler:
            instanceId: AUTO #默认主机名和时间戳生成实例ID,可以是任何字符串，但对于所有调度程序来说，必须是唯一的 对应qrtz_scheduler_state INSTANCE_NAME字段
          jobStore:
            class: org.quartz.impl.jdbcjobstore.JobStoreTX #持久化配置
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate #我们仅为数据库制作了特定于数据库的代理
            isClustered: true #打开群集功能
          threadPool: #连接池
            class: org.quartz.simpl.SimpleThreadPool
            threadCount: 5
            threadPriority: 5
  task:
    execution:
      pool:
        core-size: 5
        max-size: 15
        queue-capacity: 100
    scheduling:
      pool:
        size: 5

mybatis:
  mapper-locations: mappers/*.xml
  type-aliases-package: me.echo.community.entity
  configuration:
    aggressive-lazy-loading: false
    use-generated-keys: true

logging:
  level:
    me.echo.community: debug

community:
  path:
    domain: http://localhost:8080
    upload: D:\\appLogs\\upload
